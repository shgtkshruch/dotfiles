[user]
  name = shgtkshruch
  email = shgtk.shruch@gmail.com
[github]
  user = shgtkshruch
[color]
  diff = auto
  status = auto
  branch = auto
  ui = auto
[core]
  editor = vim
  precomposeunicode = true
  quotepath = false
[push]
  default = simple
[alias]
  ad = add
  al = config --global --get-regexp alias
  amend = commit --amend
  ama = commit --all --amend
  br = branch -v --color
  cat = cat-file -p
  cf = config --global --edit
  cm = commit
  cma = commit --all
  co = !git checkout $(git branch -v | peco | awk '{print $1}')
  cho = checkout
  cr = clone --recursive
  d = diff
  dmb = !git branch --merged | grep -v \\* | xargs -I % git branch -d %
  fn = fetch origin refs/notes/*:refs/notes/*
  l = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
  la = log --oneline --decorate --graph --branches --tags --remotes
  la = log --all --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
  lp = log --decorate --stat --patch
  ls = ls-files
  m = checkout master
  nh = notes --ref html
  nc = notes --ref css
  nj = notes --ref js
  p = push
  pn = push origin refs/notes/*
  re = rebase -i --root
  rei = !git rebase --interactive $(git log --oneline | peco | awk '{print $1}')
  rea = rebase --abort
  rec = rebase --continue
  res = rebase --skip
  remotes = remote -v
  s = status --branch --short
  sh = !git show $(git log --all --oneline --decorate=short| peco | awk '{print $1}')
[ghq]
  root = ~/dev/ghq
[filter "lfs"]
  clean = git-lfs clean %f
  smudge = git-lfs smudge %f
  required = true
[filter "npmignore"]
  smudge = cat
  clean = sed '/registry.*/d'
[filter "clean-token"]
  smudge = cat
  clean = sed '/^ *token.*[0-9a-z]*/d'
[pr-release]
